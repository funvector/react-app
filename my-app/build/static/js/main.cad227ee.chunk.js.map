{"version":3,"sources":["redux-app/appTitle/actions.js","redux-app/appTitle/reducers.js","redux-app/selectors.js","redux-app/filterForm/actions.js","redux-app/filterForm/reducers.js","redux-app/loginForm/actions.js","redux-app/loginForm/reducers.js","redux-app/toggleButtonHandler/actions.js","redux-app/toggleButtonHandler/reducers.js","redux-app/reducer.js","apps/CarsList/CarsList.jsx","apps/CarsList/index.js","apps/CarsList/CarsListContainer.js","apps/FilterForm/FilterForm.jsx","apps/FilterForm/FilterFormContainer.js","App.js","AppContainer.js","apps/Cars/AddCars.jsx","apps/Cars/index.js","apps/Cars/AddCarsContainer.js","apps/LoginForm/LoginForm.jsx","apps/LoginForm/index.js","apps/LoginForm/LoginFormContainer.js","serviceWorker.js","index.js"],"names":["CHANGE_TITLE","initialState","appTitle","getRandomId","Math","floor","random","getAppTitle","state","appTitleR","isVisible","toggleButtonHandlerR","visible","getAddCars","filterFormR","addCars","getFilters","filters","getLogin","loginFormR","login","getFilteredCars","createSelector","cars","filter","car","model","toUpperCase","price","Number","marked","MARKED_HANDLER","FILTER_MODEL","FILTER_PRICE","CHEKED_HANDLER","PUSH_CARS_LINK","PUSH_CARS_NAME","ADD_CARS","PUSH_CARS_PRICE","img","id","arguments","length","undefined","action","type","Object","objectSpread","payload","map","concat","ADD_EMAIL_ISVALID","ADD_PASSWORD_ISVALID","CLEAR_DATA_FROM_LS","logautBtnDeletHandler","localStorage","removeItem","email","password","emailIsValid","passwordIsValid","TOGGLE_HANDLER","combineReducers","addCarsR","getItem","test","trim","includes","CarsList","_this","this","props","cardClassMarked","classNames","className","card-marked","react_default","a","createElement","key","onClick","handleMarked","src","alt","React","Component","connect","carId","FilterForm","inputFilterModelHandler","event","target","value","inputFilterPriceHandler","filterChekedHandler","react","onChange","checked","App","toggleHandler","titleChangeHandler","render","loginVisibility","loginLogoutVisibilityHidden","logoutVisibility","react_router_dom","to","maxLength","apps_CarsList","FilterFormContainer","title","AddCars","onLinkChange","inputAddModelHandler","inputAddPriceHandler","addCarsHandler","toMainPargeLink","preventDefault","history","push","disabled","link","modelNmae","rootLogin","rootEmail","rootPass","LoginForm","inputEmailIsValid","inputPasswordIsValid","logInSbmtHandler","getLoginValue","setItem","JSON","stringify","session","loginDateTime","Date","alert","checkValidEmail","notValidEmail","checkValidPass","notValidPass","placeholder","withRouter","Boolean","window","location","hostname","match","store","createStore","rootReducer","ReactDOM","es","react_router","exact","path","parse","AppContainer","Cars","apps_LoginForm","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.cad227ee.chunk.js","sourcesContent":["export const CHANGE_TITLE    = 'CHANGE_TITLE';\r\n\r\nexport const titleChangeHandler = (title) => {\r\n  return {\r\n    type: CHANGE_TITLE,\r\n    payload: title\r\n  }\r\n};","import { CHANGE_TITLE } from './actions';\r\n\r\nconst initialState = {\r\n  appTitle: 'CARS APP'\r\n}\r\n\r\nexport default function appTitleR(state = initialState, action) {\r\n  switch(action.type){\r\n  case CHANGE_TITLE:\r\n    return (localStorage.getItem('loginConfirm') !== null) ? {...state, appTitle: action.payload} : state;\r\n  default: return state;\r\n  }\r\n}","import { createSelector } from 'reselect';\r\nexport const getRandomId     = () => Math.floor(Math.random()*(1000000-1+1))+1;\r\nexport const getAppTitle     = (state) => state.appTitleR.appTitle;\r\nexport const isVisible       = (state) => state.toggleButtonHandlerR.visible;\r\nexport const getCars         = (state) => state.filterFormR.cars;\r\nexport const getAddCars      = (state) => state.filterFormR.addCars;\r\nexport const getFilters      = (state) => state.filterFormR.filters;\r\nexport const getLogin        = (state) => state.loginFormR.login;\r\nexport const getFilteredCars = createSelector(\r\n  [getCars, getFilters],\r\n  (cars, filters) => cars.filter((car) => {\r\n   return ((filters.model !== '' && ' ') ? \r\n   car.model.toUpperCase() === filters.model.toUpperCase() : true && (filters.price !== '' && '0') ? \r\n   Number(car.price) === Number(filters.price) : true && (filters.marked === true) ? \r\n   car.marked : true)\r\n}));","import { getRandomId } from './../selectors';\r\nexport const MARKED_HANDLER  = 'MARKED_HANDLER';\r\nexport const FILTER_MODEL    = 'FILTER_MODEL';\r\nexport const FILTER_PRICE    = 'FILTER_PRICE';\r\nexport const CHEKED_HANDLER  = 'CHEKED_HANDLER';\r\nexport const PUSH_CARS_LINK  = 'PUSH_CARS_LINK';\r\nexport const PUSH_CARS_NAME  = 'PUSH_CARS_NAME';\r\nexport const ADD_CARS        = 'ADD_CARS';\r\nexport const PUSH_CARS_PRICE = 'PUSH_CARS_LINK';\r\n\r\nexport const handleMarked = (carId) => {\r\n  return {\r\n    type: MARKED_HANDLER,\r\n    payload: carId\r\n  }\r\n};\r\n\r\nexport const inputFilterModelHandler = (model) => {\r\n  return {\r\n    type: FILTER_MODEL,\r\n    payload: {model}\r\n  }\r\n};\r\n\r\nexport const inputFilterPriceHandler = (price) => {\r\n  return {\r\n    type: FILTER_PRICE,\r\n    payload: {price}\r\n  }\r\n};\r\n\r\nexport const filterChekedHandler = () => {\r\n  return {\r\n    type: CHEKED_HANDLER\r\n  }\r\n};\r\n\r\nexport const onLinkChange = (link) => {\r\n  return {\r\n    type: PUSH_CARS_LINK,\r\n    payload: {img: link}\r\n  }\r\n};\r\n\r\nexport const inputAddModelHandler = (modelNmae) => {\r\n  return {\r\n    type: PUSH_CARS_NAME,\r\n    payload: {model: modelNmae}\r\n  }\r\n};\r\n\r\nexport const inputAddPriceHandler = (price) => {\r\n  return {\r\n    type: PUSH_CARS_PRICE,\r\n    payload: {price, id: getRandomId()}\r\n  }\r\n};\r\n\r\nexport const addCarsHandler = () => {\r\n  return {\r\n    type: ADD_CARS\r\n  }\r\n};","import { FILTER_MODEL, MARKED_HANDLER, FILTER_PRICE, CHEKED_HANDLER, PUSH_CARS_LINK, PUSH_CARS_NAME, PUSH_CARS_PRICE, ADD_CARS } from './actions';\r\nimport { getRandomId } from './../selectors';\r\n\r\nconst initialState = {\r\n  cars: [\r\n    {marked: false, model: 'Audi TT', price: '15000', img: 'https://www.whatcar.com/car-leasing/images/imagery/large/10753.jpg', id: getRandomId()},\r\n    {marked: false, model: 'BMW X5', price: '30000', img: 'https://cars-specs.com/wp-content/uploads/2012/11/x5m.jpg', id: getRandomId()},\r\n    {marked: false, model: 'Lamborghini Urus', price: '450000', img: 'https://www.supercarreport.com/wp-content/uploads/2019/03/7-1.jpg', id: getRandomId()},\r\n    {marked: false, model: 'Mercedes amg coupe', price: '48000', img: 'https://auto.ndtvimg.com/car-images/big/mercedes-amg/gle-coupe/mercedes-amg-gle-coupe.jpg?v=2', id: getRandomId()}\r\n  ],\r\n  filters: {model: '', price: '', marked: false},\r\n  addCars: {marked: false, model: '', price: '', img: '', id: null}\r\n}\r\n\r\nexport default function filterFormR(state = initialState, action) {\r\n  switch(action.type){\r\n  case FILTER_MODEL:\r\n    return {...state, filters: {...state.filters,...action.payload}};\r\n  case MARKED_HANDLER:\r\n    return {...state, cars: state.cars.map((car) => (car.id === action.payload)? {...car, marked: !car.marked} : car)};  \r\n  case FILTER_PRICE:\r\n    return {...state, filters: {...state.filters,...action.payload}};\r\n  case CHEKED_HANDLER:\r\n    return {...state, filters: {...state.filters, marked: !state.filters.marked}};\r\n  case PUSH_CARS_LINK:\r\n    return {...state, addCars: {...state.addCars,...action.payload}};\r\n  case PUSH_CARS_NAME:\r\n    return {...state, addCars: {...state.addCars,...action.payload}};\r\n  case PUSH_CARS_PRICE:\r\n    return {...state, addCars: {...state.addCars,...action.payload}};\r\n  case ADD_CARS:\r\n    return {\r\n      ...state,\r\n      cars: state.cars.concat(state.addCars),\r\n      addCars: {\r\n        ...initialState.addCars\r\n      },\r\n    };\r\n  default: return state;\r\n  }\r\n}","export const ADD_EMAIL_ISVALID    = 'ADD_EMAIL_ISVALID';\r\nexport const ADD_PASSWORD_ISVALID = 'ADD_PASSWORD_ISVALID';\r\nexport const CLEAR_DATA_FROM_LS   = 'CLEAR_DATA_FROM_LS';\r\n\r\nexport const inputEmailIsValid = (email) => {\r\n  return {\r\n    type: ADD_EMAIL_ISVALID,\r\n    payload: {email}\r\n  }\r\n};\r\n\r\nexport const inputPasswordIsValid = (password) => {\r\n  return {\r\n    type: ADD_PASSWORD_ISVALID,\r\n    payload: {password}\r\n  }\r\n};\r\n\r\nexport const logautBtnDeletHandler = () => {\r\n  localStorage.removeItem('loginConfirm');\r\n  return {\r\n    type: CLEAR_DATA_FROM_LS\r\n  }\r\n};","import { ADD_EMAIL_ISVALID, ADD_PASSWORD_ISVALID, CLEAR_DATA_FROM_LS } from './actions';\r\n\r\nconst initialState = {\r\n  login: {email: '', password: '', emailIsValid: false, passwordIsValid: false}\r\n};\r\n\r\nexport default function loginFormR(state = initialState, action) {\r\n  switch(action.type){\r\n    case ADD_EMAIL_ISVALID:\r\n      return (\r\n        (/^[A-Z0-9_'%=+!`#~$*?^{}&|-]+([\\.][A-Z0-9_'%=+!`#~$*?^{}&|-]+)*@[A-Z0-9-]+(\\.[A-Z0-9-]+)+$/i.test(action.payload.email.trim())) ?\r\n        {...state, login: {...state.login,...action.payload, emailIsValid: true}} : \r\n        {...state, login: {...state.login,...action.payload, emailIsValid: false}}\r\n      );\r\n    case ADD_PASSWORD_ISVALID:\r\n      return (\r\n        (action.payload.password.trim().length > 7 && (!action.payload.password.includes(' ') && action.payload.password !== '')) ?\r\n        {...state, login: {...state.login,...action.payload, passwordIsValid: true}} : \r\n        {...state, login: {...state.login,...action.payload, passwordIsValid: false}}\r\n      );\r\n    case CLEAR_DATA_FROM_LS:\r\n      return {...state, login: {email: '', password: '', emailIsValid: false, passwordIsValid: false}}\r\n    default: return state;\r\n  }\r\n};","export const TOGGLE_HANDLER  = 'TOGGLE_HANDLER';\r\n\r\nexport const toggleHandler = () => {\r\n  return {\r\n    type: TOGGLE_HANDLER\r\n  }\r\n};","import { TOGGLE_HANDLER } from './actions';\r\n\r\nconst initialState = {\r\n  visible: true\r\n}\r\n\r\nexport default function toggleButtonHandlerR(state = initialState, action) {\r\n  switch(action.type){\r\n  case TOGGLE_HANDLER:\r\n    return {...state, visible: !state.visible};\r\n  default: return state;\r\n  }\r\n}","import { combineReducers } from 'redux';\r\nimport appTitleR from './appTitle/reducers';\r\nimport addCarsR from './filterForm/reducers';\r\nimport filterFormR from './filterForm/reducers';\r\nimport loginFormR from './loginForm/reducers';\r\nimport toggleButtonHandlerR from './toggleButtonHandler/reducers';\r\n\r\nexport default combineReducers({\r\n  addCarsR,\r\n  appTitleR,\r\n  filterFormR,\r\n  loginFormR,\r\n  toggleButtonHandlerR\r\n});","import React from 'react';\r\nimport classNames from 'classnames';\r\n\r\nexport default class CarsList extends React.Component{\r\n  \r\n  render() {\r\n\r\n    return this.props.cars.map((car) => {\r\n\r\n      let cardClassMarked = classNames('card effect8', this.props.className, {\r\n        'card-marked': car.marked\r\n      });\r\n      \r\n      return (\r\n        <div className={cardClassMarked} key={car.id} onClick={() => this.props.handleMarked(car.id)}>\r\n          <div className='card-img'>\r\n            <img \r\n              src={car.img}\r\n              alt={car.model}\r\n            />\r\n          </div>\r\n            <h3>{car.model}</h3>\r\n            <p>{car.price} $</p>\r\n        </div>\r\n      )}\r\n    )\r\n  }\r\n}","import CarsList from './CarsListContainer'\r\n\r\nexport default CarsList","import CarsList from './CarsList';\r\nimport { connect } from 'react-redux';\r\nimport { getFilteredCars } from './../../redux-app/selectors';\r\nimport { handleMarked } from './../../redux-app/filterForm/actions';\r\n\r\nexport default connect(\r\n  (state) => ({\r\n    cars: getFilteredCars(state)\r\n  }),\r\n  {\r\n    handleMarked\r\n  }\r\n)(CarsList);","import React, { Component, Fragment } from 'react';\r\n\r\nexport default class FilterForm extends Component{\r\n\r\n  inputFilterModelHandler = (event) => this.props.inputFilterModelHandler(event.target.value);\r\n  inputFilterPriceHandler = (event) => this.props.inputFilterPriceHandler(event.target.value);\r\n  filterChekedHandler     = () => this.props.filterChekedHandler();\r\n\r\n  render() {\r\n    \r\n    const { getFilters } = this.props;\r\n\r\n    return (\r\n      <Fragment>\r\n        <form>\r\n        <h3 className='filters-h3'>FILTERS</h3>\r\n          <div className='filetrs-form'>\r\n            <label>\r\n            <h4>ENTER MODEL</h4>\r\n              <input type='text' className='inp' onChange={this.inputFilterModelHandler} value={getFilters.model}/>\r\n            </label>\r\n            <label>\r\n            <h4>ENTER PRICE</h4>\r\n              <input type='number' className='inp' onChange={this.inputFilterPriceHandler} value={getFilters.price}/>\r\n            </label>\r\n            <label className='checkbox'>\r\n              <input type='checkbox' onChange={this.filterChekedHandler} checked={getFilters.marked}/>\r\n              <h4 className='checkbox__text'>MARKED?</h4>\r\n            </label>\r\n          </div>\r\n        </form>\r\n      </Fragment>\r\n      )\r\n    }\r\n  }","import FilterForm from './FilterForm';\r\nimport { connect } from 'react-redux';\r\nimport { getFilters } from './../../redux-app/selectors';\r\nimport { inputFilterModelHandler, inputFilterPriceHandler, filterChekedHandler } from './../../redux-app/filterForm/actions';\r\n\r\nexport default connect(\r\n  (state) => ({\r\n    getFilters: getFilters(state)\r\n  }),\r\n  {\r\n    inputFilterModelHandler,\r\n    inputFilterPriceHandler,\r\n    filterChekedHandler\r\n  },\r\n)(FilterForm);","import { Link } from 'react-router-dom';\r\nimport React, { Component, Fragment } from 'react';\r\nimport classNames from 'classnames';\r\nimport CarsList from './apps/CarsList';\r\nimport FilterForm from './apps/FilterForm/FilterFormContainer';\r\n\r\nclass App extends Component{\r\n\r\n  toggleHandler         = () => this.props.toggleHandler();\r\n  titleChangeHandler    = (event) => this.props.titleChangeHandler(event.target.value);\r\n  logautBtnDeletHandler = () => this.props.logautBtnDeletHandler();\r\n\r\n  render = () => {\r\n    const { visible } = this.props;\r\n\r\n    let loginVisibility = classNames('btn-regForm btn-regFormLoginLink', this.props.className, {\r\n      'loginLogoutVisibilityHidden': localStorage.getItem('loginConfirm') !== null\r\n    });\r\n  \r\n    let logoutVisibility = classNames('btn-regForm btn-regFormLogout', this.props.className, {\r\n      'loginLogoutVisibilityHidden': localStorage.getItem('loginConfirm') === null\r\n    });\r\n\r\n    return (\r\n      <Fragment>\r\n        <div className='app'>\r\n          <Link to='/login' className={loginVisibility}>LOG IN</Link>\r\n          <Link to='/login' onClick={this.logautBtnDeletHandler} className={logoutVisibility}>LOG OUT</Link>\r\n          <h1>{this.props.appTitle}</h1>\r\n          <input type='text' maxLength=\"50\" value={this.props.appTitle} className='inp' onChange={this.titleChangeHandler} />\r\n          <button className='btn' onClick={this.toggleHandler}>Toggle</button>\r\n          <div className='list'>  \r\n            {(visible) ? <CarsList /> : null}\r\n          </div>\r\n          <FilterForm />\r\n          <Link to='/new' className='btn btn-add_cars'>Add cars +</Link>\r\n        </div>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","import App from './App';\r\nimport { toggleHandler } from './redux-app/toggleButtonHandler/actions';\r\nimport { titleChangeHandler } from './redux-app/appTitle/actions';\r\nimport { connect } from 'react-redux';\r\nimport { getAppTitle, isVisible } from './redux-app/selectors';\r\nimport { logautBtnDeletHandler } from './redux-app/loginForm/actions';\r\n\r\nexport default connect(\r\n  (state) => ({\r\n    appTitle: getAppTitle(state),\r\n    visible: isVisible(state),\r\n  }),\r\n  {\r\n    logautBtnDeletHandler,\r\n    titleChangeHandler,\r\n    toggleHandler\r\n  },\r\n)(App);","import React, { Component, Fragment } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport classNames from 'classnames';\r\n\r\nexport default class AddCars extends Component{\r\n\r\n  onLinkChange          = (event) => this.props.onLinkChange(event.target.value);\r\n  inputAddModelHandler  = (event) => this.props.inputAddModelHandler(event.target.value);\r\n  inputAddPriceHandler  = (event) => this.props.inputAddPriceHandler(event.target.value);\r\n  logautBtnDeletHandler = () => this.props.logautBtnDeletHandler();\r\n  addCarsHandler        = () => this.props.addCarsHandler();\r\n  toMainPargeLink       = (event) => {\r\n    event.preventDefault();\r\n    this.props.history.push('/');\r\n  }\r\n\r\n  render() {\r\n    const { addCars } = this.props;\r\n\r\n    let loginVisibility = classNames('btn-regForm btn-regFormLoginLink', this.props.className, {\r\n      'loginLogoutVisibilityHidden': localStorage.getItem('loginConfirm') !== null\r\n    });\r\n\r\n    let logoutVisibility = classNames('btn-regForm btn-regFormLogout', this.props.className, {\r\n      'loginLogoutVisibilityHidden': localStorage.getItem('loginConfirm') === null\r\n    });\r\n    \r\n    return (\r\n      <Fragment>\r\n        <Link to='/login' className={loginVisibility}>LOG IN</Link>\r\n        <Link to='/login' onClick={this.logautBtnDeletHandler} className={logoutVisibility}>LOG OUT</Link>\r\n        <form>\r\n          <label>\r\n          <h3>ADD LINK TO IMG</h3>\r\n            <input type='text' className='inp' onChange={this.onLinkChange} value={addCars.img} />\r\n          </label>\r\n          <label>\r\n          <h3>ADD MODEL</h3>\r\n            <input type='text' className='inp' onChange={this.inputAddModelHandler} value={addCars.model} />\r\n          </label>\r\n          <label>\r\n          <h3>ADD PRICE</h3>\r\n            <input type='text' className='inp' onChange={this.inputAddPriceHandler} value={addCars.price} />\r\n          </label>\r\n          <Link to='/'>\r\n            <button type='button' className='btn btn-add_cars' onClick={this.addCarsHandler} disabled={!addCars.img || !addCars.model || !addCars.price}>\r\n              Add\r\n            </button>\r\n          </Link>\r\n        </form>\r\n        <Link to='/'>TO MAIN PAGE</Link>\r\n      </Fragment>\r\n      )\r\n    }\r\n  }","import AddCars from './AddCarsContainer';\r\n\r\nexport default AddCars","import AddCars from './AddCars';\r\nimport { connect } from 'react-redux';\r\nimport { getAddCars } from './../../redux-app/selectors';\r\nimport { logautBtnDeletHandler } from './../../redux-app/loginForm/actions';\r\nimport { addCarsHandler, onLinkChange, inputAddModelHandler, inputAddPriceHandler } from './../../redux-app/filterForm/actions';\r\n\r\nexport default connect(\r\n  (state) => ({\r\n    addCars: getAddCars(state)\r\n  }),\r\n  {\r\n    addCarsHandler,\r\n    onLinkChange,\r\n    inputAddModelHandler,\r\n    inputAddPriceHandler,\r\n    logautBtnDeletHandler\r\n  },\r\n)(AddCars);","import React, { Component, Fragment } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport classNames from 'classnames';\r\n\r\nconst rootLogin = {\r\n  rootEmail: 'admin@test.com',\r\n  rootPass: '12345678'\r\n};\r\n\r\nexport const limitLoginTime = 24 * 3600 * 1000;\r\n\r\nexport default class LoginForm extends Component{\r\n\r\n  inputEmailIsValid    = (event) => this.props.inputEmailIsValid(event.target.value);\r\n  inputPasswordIsValid = (event) => this.props.inputPasswordIsValid(event.target.value);\r\n  logInSbmtHandler     = (event) =>{\r\n    if(this.props.getLoginValue.password === rootLogin.rootPass && this.props.getLoginValue.email === rootLogin.rootEmail){\r\n      localStorage.setItem('loginConfirm', JSON.stringify({session: {loginDateTime: +new Date()}}));\r\n      this.props.history.push('/');\r\n    } else {\r\n      event.preventDefault();\r\n      if(this.props.getLoginValue.password !== rootLogin.rootPass && this.props.getLoginValue.email !== rootLogin.rootEmail){\r\n        alert('INCORRECT PASSWORD and EMAIL');\r\n      } else if(this.props.getLoginValue.password !== rootLogin.rootPass){\r\n        alert('INCORRECT PASSWORD');\r\n      } else {\r\n        alert('INCORRECT EMAIL');\r\n      }\r\n    }\r\n  }\r\n\r\n  render() {\r\n\r\n    const { getLoginValue } = this.props;\r\n    \r\n    let checkValidEmail = classNames('loginFormIsValid', this.props.className, {\r\n      'notValidEmail': getLoginValue.emailIsValid === false\r\n    });\r\n\r\n    let checkValidPass = classNames('loginFormIsValid', this.props.className, {\r\n      'notValidPass': getLoginValue.passwordIsValid === false\r\n    });\r\n    \r\n    return (\r\n      <Fragment>\r\n        <form>\r\n          <fieldset>\r\n            <legend className='regFormLegend'>WELL HELLO THERE</legend>\r\n            <label>\r\n            <h3 className='regFormh3'>ENTER EMAIL</h3>\r\n              <input type='email' className='inp' onChange={this.inputEmailIsValid} placeholder='email: admin@test.com' value={getLoginValue.email}/>\r\n              <p className={checkValidEmail}>\r\n                Email is invalid\r\n              </p>\r\n            </label>\r\n            <label>\r\n            <h3 className='regFormh3'>ENTER PASSWORD</h3>\r\n              <input type='password' className='inp' onChange={this.inputPasswordIsValid} placeholder='8+ symbols (without spaces)' value={getLoginValue.password}/>\r\n              <p className={checkValidPass}>\r\n                This field is required\r\n              </p>\r\n            </label>\r\n              <button\r\n                type='submit'\r\n                className='btn btn-regFormLogin'\r\n                onClick={this.logInSbmtHandler}\r\n                disabled={(getLoginValue.emailIsValid === false || getLoginValue.passwordIsValid === false) ? true : false}>\r\n                  LOG IN\r\n              </button>\r\n              <p>\r\n                <Link to='/'>\r\n                  TO MAIN PAGE\r\n                </Link>\r\n              </p>\r\n          </fieldset>\r\n        </form>\r\n      </Fragment>\r\n    )\r\n  }\r\n}","import LoginForm  from './LoginFormContainer';\r\n\r\nexport default LoginForm;","import LoginForm from './LoginForm';\r\nimport { connect } from 'react-redux';\r\nimport { getLogin } from './../../redux-app/selectors';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { inputEmailIsValid, inputPasswordIsValid } from './../../redux-app/loginForm/actions';\r\n\r\nexport default withRouter(connect(\r\n  (state) => ({\r\n    getLoginValue: getLogin(state)\r\n  }),\r\n  {\r\n    inputPasswordIsValid,\r\n    inputEmailIsValid,\r\n  },\r\n)(LoginForm));","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { createStore } from 'redux';\r\nimport rootReducer from './redux-app/reducer';\r\nimport { HashRouter as Router, Route, Switch, Redirect } from 'react-router-dom';\r\nimport App from './AppContainer';\r\nimport AddCars from './apps/Cars/index';\r\nimport LoginForm  from './apps/LoginForm/index';\r\nimport { limitLoginTime } from './apps/LoginForm/LoginForm';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nconst store = createStore(rootReducer);\r\n\r\nReactDOM.render(<Provider store={store}>\r\n  <Router>\r\n    <Switch>\r\n      <Route exact path='/' render={() => {\r\n        if(localStorage.getItem('loginConfirm') !== null){\r\n          if(JSON.parse(+new Date() - JSON.parse(localStorage.getItem('loginConfirm')).session.loginDateTime) < limitLoginTime){\r\n            return <App />;\r\n          } else {\r\n            localStorage.removeItem('loginConfirm');\r\n            return (<Redirect to='/login'/>);\r\n          }\r\n        } else {\r\n          return <App />;\r\n        }\r\n      }}/>\r\n\r\n      <Route exact path='/new' render={() => {\r\n        if(localStorage.getItem('loginConfirm') !== null){\r\n          if(JSON.parse(+new Date() - JSON.parse(localStorage.getItem('loginConfirm')).session.loginDateTime) < limitLoginTime){\r\n            return  <AddCars />;\r\n          } else {\r\n            localStorage.removeItem('loginConfirm');\r\n            return (<Redirect to='/login'/>);\r\n          }\r\n        } else {\r\n          return (<Redirect to='/login'/>);\r\n        }\r\n      }}/>\r\n\r\n      <Route exact path='/login' render={() => {\r\n        if(localStorage.getItem('loginConfirm') !== null){\r\n          if(JSON.parse(+new Date() - JSON.parse(localStorage.getItem('loginConfirm')).session.loginDateTime) < limitLoginTime){\r\n            return (<Redirect to='/'/>);\r\n          } else {\r\n            localStorage.removeItem('loginConfirm');\r\n            return <LoginForm />;\r\n          }\r\n        } else {\r\n          return <LoginForm />;\r\n        }\r\n      }}/>\r\n    </Switch>\r\n  </Router>\r\n</Provider>, document.getElementById('root'));\r\nserviceWorker.unregister();"],"sourceRoot":""}